/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Grafica;

import farmacia.Producto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author monst
 */
public class VentanaPrincipal extends javax.swing.JFrame {

    private String nombre;
    private String id;
    private double temperatura;
    private double valorBase;
    private DefaultTableModel modelo;

    private static boolean validarSoloNumeros(String datos) {

        return datos.matches("[0-9]*");
    }

    private void limpiar() {
        txtIdPRoducto.setText(null);
        txtNombreProducto.setText(null);
        txtTemperatura.setText(null);
        txtValorBase.setText(null);
    }

    private void limpiarTabla() {
        modelo.setRowCount(0);

    }

    public VentanaPrincipal() {
        initComponents();
        nombre = "";
        id = "";
        temperatura = 0;
        valorBase = 0;
        Object[] columnas = new Object[5];
        columnas[0] = "Id producto";
        columnas[1] = "Nombre Prodcuto";
        columnas[2] = "Temperatura";
        columnas[3] = "Valor Base";
        columnas[4] = "Valor Unitario";
        modelo = new DefaultTableModel(columnas, 0);
        tbtProductos.setModel(modelo);

        String[] productoLista = new String[5];

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        lbNombreProdcuto = new javax.swing.JLabel();
        lbIdProducto = new javax.swing.JLabel();
        lbTemperatura = new javax.swing.JLabel();
        lbValorBase = new javax.swing.JLabel();
        txtNombreProducto = new javax.swing.JTextField();
        txtIdPRoducto = new javax.swing.JTextField();
        txtTemperatura = new javax.swing.JTextField();
        txtValorBase = new javax.swing.JTextField();
        btnGuardar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbtProductos = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titulo.setText("Drogueria MINTIC 2022");

        lbNombreProdcuto.setText("Nombre Producto");

        lbIdProducto.setText("ID Producto");

        lbTemperatura.setText("Temperatura");

        lbValorBase.setText("Valor Base");

        txtNombreProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreProductoActionPerformed(evt);
            }
        });

        txtTemperatura.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTemperaturaKeyPressed(evt);
            }
        });

        txtValorBase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtValorBaseKeyPressed(evt);
            }
        });

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        tbtProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Producto", "Nombre Producto", "Temperatura", "Valor base"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tbtProductos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(502, Short.MAX_VALUE)
                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(290, 290, 290))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbTemperatura)
                                .addComponent(lbValorBase))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTemperatura, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addComponent(txtValorBase)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(lbIdProducto)
                                    .addGap(61, 61, 61))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(lbNombreProdcuto)
                                    .addGap(35, 35, 35)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtIdPRoducto, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                .addComponent(txtNombreProducto)))
                        .addComponent(btnActualizar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnGuardar)
                        .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbNombreProdcuto)
                            .addComponent(txtNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbIdProducto)
                            .addComponent(txtIdPRoducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbTemperatura)
                            .addComponent(txtTemperatura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbValorBase)
                            .addComponent(txtValorBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnActualizar)
                            .addComponent(btnGuardar))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBuscar)
                            .addComponent(btnEliminar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(91, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreProductoActionPerformed
        // TODO add your handling code here:ssd

    }//GEN-LAST:event_txtNombreProductoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        // TODO add your handling code here:
        if (!txtIdPRoducto.getText().equals("") && !txtNombreProducto.getText().equals("") && !txtTemperatura.getText().equals("")
                && !txtValorBase.getText().equals("")) {
            nombre = txtNombreProducto.getText();
            id = txtIdPRoducto.getText();
            temperatura = Double.parseDouble(txtTemperatura.getText());
            valorBase = Double.parseDouble(txtValorBase.getText());
            Producto producto = new Producto(nombre, id, temperatura, valorBase);
            double valorUnitario = producto.calcularCostoDeAlmacenamiento();

            modelo.addRow(new Object[]{id, nombre, temperatura, valorBase, valorUnitario});
            producto.guardarProducto();
        } else {
            JOptionPane.showMessageDialog(null, "Hay informacion por rellenar", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }

        limpiar();

    }//GEN-LAST:event_btnGuardarActionPerformed

    private void txtTemperaturaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTemperaturaKeyPressed
        // TODO add your handling code here:
        if (!validarSoloNumeros(txtTemperatura.getText())) {
            JOptionPane.showMessageDialog(null, "Solo digite numeros en este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtTemperatura.setText(null);
    }//GEN-LAST:event_txtTemperaturaKeyPressed
    }
    private void txtValorBaseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValorBaseKeyPressed
        // TODO add your handling code here:
        if (!validarSoloNumeros(txtValorBase.getText())) {
            JOptionPane.showMessageDialog(null, "Solo digite numeros en este campo", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtValorBase.setText(null);
    }//GEN-LAST:event_txtValorBaseKeyPressed
    }
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!txtIdPRoducto.getText().equals("")) {
            id = txtIdPRoducto.getText();
            Producto producto = new Producto();
            producto.consultarProducto(id);
            System.out.println(producto);
            if (producto.getId() == null) {
                JOptionPane.showMessageDialog(null, "No se encontro ningun producto con ese ID", "Advertencia", JOptionPane.WARNING_MESSAGE);
                limpiar();
                return;
            }

            if (JOptionPane.showConfirmDialog(null, "¿Desea eliminar el producto?") == 0) {
                producto.eliminarProducto(id);
                JOptionPane.showMessageDialog(null, "El producto ha sido eliminado correctamente", "Advertencia", JOptionPane.WARNING_MESSAGE);
                limpiar();
                limpiar();
            }

        } else {
            JOptionPane.showMessageDialog(null, "Hay informacion por rellenar", "Advertencia", JOptionPane.WARNING_MESSAGE);
        }

        limpiar();


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        limpiarTabla();
        if (txtIdPRoducto.getText().equals("")) {
            Producto producto = new Producto();
            ArrayList<Producto> productolist = producto.consultarTodosProducto();

            //System.out.println(producto.consultarTodosProducto(""));
            for (Producto producto1 : productolist) {
                double valorUnitario = producto1.calcularCostoDeAlmacenamiento();
                modelo.addRow(new Object[]{producto1.getId(), producto1.getNombre(), producto1.getTemperatura(), producto1.getValorBase(), valorUnitario});

            }

        } else {
            String id = txtIdPRoducto.getText();
            Producto producto = new Producto();
            producto.consultarProducto(id);
            if (producto.getId() == null) {
                JOptionPane.showMessageDialog(null, "No hay productos con ese ID", "Advertencia", JOptionPane.WARNING_MESSAGE);
                return;
            }
            double valorUnitario = producto.calcularCostoDeAlmacenamiento();
            modelo.addRow(new Object[]{producto.getId(), producto.getNombre(), producto.getTemperatura(), producto.getValorBase(), valorUnitario});

        }

        //limpiar();  

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        String id = modelo.getValueAt(0, 0).toString();
        String nombre = modelo.getValueAt(0, 1).toString();
        double temperatura = Double.parseDouble(modelo.getValueAt(0, 2).toString());
        double valorBase = Double.parseDouble(modelo.getValueAt(0, 3).toString());
        Producto producto = new Producto(nombre,id ,temperatura ,valorBase);
        producto.actualizarProducto(id);
        limpiarTabla();
        double valorUnitario = producto.calcularCostoDeAlmacenamiento();
        modelo.addRow(new Object[]{producto.getId(), producto.getNombre(), producto.getTemperatura(), producto.getValorBase(), valorUnitario});


    }//GEN-LAST:event_btnActualizarActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbIdProducto;
    private javax.swing.JLabel lbNombreProdcuto;
    private javax.swing.JLabel lbTemperatura;
    private javax.swing.JLabel lbValorBase;
    private javax.swing.JTable tbtProductos;
    private javax.swing.JLabel titulo;
    private javax.swing.JTextField txtIdPRoducto;
    private javax.swing.JTextField txtNombreProducto;
    private javax.swing.JTextField txtTemperatura;
    private javax.swing.JTextField txtValorBase;
    // End of variables declaration//GEN-END:variables
}
